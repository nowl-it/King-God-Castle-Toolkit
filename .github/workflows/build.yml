name: 'publish'

on:
    push:
        branches:
            - main

# This workflow will trigger on each push to the `main` branch to create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
    publish-tauri:
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: 'macos-latest' # for Arm based macs (M1 and above).
                      args: '--target aarch64-apple-darwin'
                    - platform: 'macos-latest' # for Intel based macs.
                      args: '--target x86_64-apple-darwin'
                    - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
                      args: ''
                    - platform: 'windows-latest'
                      args: ''

        runs-on: ${{ matrix.platform }}
        steps:
            - uses: actions/checkout@v4

            - name: setup node
              uses: actions/setup-node@v4
              with:
                  node-version: lts/*

            - name: setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 10

            - name: install Rust stable
              uses: dtolnay/rust-toolchain@stable
              with:
                  # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
                  targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

            - name: install dependencies (ubuntu only)
              if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
              # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
              # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

            - name: install frontend dependencies
              run: pnpm install

            - uses: tauri-apps/tauri-action@v0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
                  releaseName: 'App v__VERSION__'
                  releaseBody: 'See the assets to download this version and install.'
                  releaseDraft: true
                  prerelease: false
                  args: ${{ matrix.args }}

    # Job riêng cho Arch Linux build
    build-arch-linux:
        permissions:
            contents: write
        runs-on: ubuntu-latest
        container:
            image: archlinux:latest

        steps:
            - name: Update system and install dependencies
              run: |
                  pacman -Syu --noconfirm
                  pacman -S --noconfirm base-devel git nodejs npm rustup webkit2gtk-4.1 gtk3 libayatana-appindicator patchelf librsvg xdg-utils desktop-file-utils

            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Setup pnpm in Arch
              run: |
                  npm install -g pnpm@10

            - name: Setup Rust
              run: |
                  rustup default stable
                  rustup update

            - name: Install frontend dependencies
              run: pnpm install

            - name: Build Tauri app for Arch
              run: |
                  # Build using cargo tauri directly
                  cargo install tauri-cli --version "^2.0"
                  cargo tauri build

            - name: Create Arch package (optional)
              run: |
                  # Tạo PKGBUILD cho Arch Linux nếu cần
                  mkdir -p arch-package
                  # Copy binary và các file cần thiết
                  cp src-tauri/target/release/bundle/deb/*.deb arch-package/ || true
                  cp src-tauri/target/release/bundle/appimage/*.AppImage arch-package/ || true

            - name: Upload Arch Linux artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: tauri-arch-linux
                  path: |
                      src-tauri/target/release/bundle/deb/*.deb
                      src-tauri/target/release/bundle/rpm/*.rpm
                      src-tauri/target/release/bundle/appimage/*.AppImage
                      arch-package/*

            # Release cho Arch Linux build
            - name: Release Arch Linux build
              uses: softprops/action-gh-release@v1
              if: startsWith(github.ref, 'refs/tags/') || github.ref == 'refs/heads/main'
              with:
                  tag_name: arch-v${{ github.run_number }}
                  name: 'Arch Linux Build v${{ github.run_number }}'
                  body: 'Arch Linux specific build. See assets for installation files.'
                  draft: true
                  prerelease: false
                  files: |
                      src-tauri/target/release/bundle/deb/*.deb
                      src-tauri/target/release/bundle/rpm/*.rpm
                      src-tauri/target/release/bundle/appimage/*.AppImage
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
