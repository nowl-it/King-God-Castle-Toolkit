name: publish

on:
    push:
        branches:
            - main

jobs:
    publish-tauri:
        permissions:
            contents: write

        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: macos-latest
                      args: '--target aarch64-apple-darwin'
                    - platform: macos-latest
                      args: '--target x86_64-apple-darwin'
                    - platform: ubuntu-22.04
                      args: ''
                    - platform: windows-latest
                      args: ''

        runs-on: ${{ matrix.platform }}

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: lts/*

            - name: Setup PNPM
              uses: pnpm/action-setup@v4
              with:
                  version: 10

            - name: Install Rust
              uses: dtolnay/rust-toolchain@stable
              with:
                  targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

            - name: Install Linux build deps
              if: matrix.platform == 'ubuntu-22.04'
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

            - name: Install frontend deps
              run: pnpm install

            - name: Build Tauri app
              uses: tauri-apps/tauri-action@v0
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tagName: app-v__VERSION__
                  releaseName: 'App v__VERSION__'
                  releaseBody: 'See the assets to download this version and install.'
                  releaseDraft: true
                  prerelease: false
                  args: ${{ matrix.args }}

            - name: Prepare AUR PKGBUILD
              if: matrix.platform == 'ubuntu-22.04'
              run: |
               VERSION=$(jq -r .version < src-tauri/tauri.conf.json)
               ARCH=$(uname -m)
               PKGNAME=com.nowl.kgc-toolkit
               mkdir -p aur
               cat > aur/PKGBUILD << 'EOF'
               pkgname=$PKGNAME
               pkgver=$VERSION
               pkgrel=1
               pkgdesc="KGC Toolkit"
               arch=('x86_64' 'aarch64')
               url="https://github.com/${{ github.repository }}"
               license=('MIT')
               depends=('gtk3' 'libappindicator-gtk3')
               source=("${pkgname}-${pkgver}-${ARCH}.tar.zst::${pkgname}-${pkgver}-${ARCH}.tar.zst")
               sha256sums=('SKIP')
               package() {
                 install -Dm755 "${pkgname}-${pkgver}-${ARCH}.tar.zst" "$pkgdir/usr/bin/${pkgname}"
               }
               EOF

            - name: Package for AUR
              if: matrix.platform == 'ubuntu-22.04'
              run: |
               VERSION=$(jq -r .version < src-tauri/tauri.conf.json)
               ARCH=$(uname -m)
               BINARY=com.nowl.kgc-toolkit
               mkdir -p aur/src
               # Copy the Tauri‐built binary
               cp src-tauri/target/release/$BINARY aur/src/
               # Create the .tar.zst archive
               cd aur/src
               tar -cJf ../${BINARY}-${VERSION}-${ARCH}.tar.zst $BINARY
               cd ..
               tar czf ${BINARY}-${VERSION}.tar.gz PKGBUILD src
               ls -lah aur
